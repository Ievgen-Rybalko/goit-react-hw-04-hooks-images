{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/pixabayAPI.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onQuerySubmit","useState","searchQuery","setSearchQuery","btnDisabled","setBtnDisabled","className","styles","onSubmit","e","preventDefault","trim","length","type","disabled","SearchForm__button_disabled","SearchForm__button","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","Button","onGetMore","More__button","onClick","modalRoot","document","querySelector","Modal","onClose","src","alt","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","ImageGallery","scrollTo","top","documentElement","scrollHeight","behavior","this","props","children","Component","ImageGalleryItem","id","url","ImageGalleryItem__container","BASE_URL","KEY","IMG_TYPE","api","fetchImages","currentPage","fetch","then","res","ok","json","Promise","reject","Error","App","setCurrentPage","showModal","setShowModal","isLoading","setIsLoading","urlModal","setUrlModal","altModal","setAltModal","imgOnCurrentPage","setImgOnCurrentPage","images","setImages","error","setError","fetchImgs","pixabayAPI","data","hits","prevImages","prevCurPage","catch","prevError","message","finally","toggleModal","prevShowModal","handleImageClick","getAttribute","shouldRenderBtn","style","color","border","borderRadius","fontSize","map","tags","webformatURL","largeImageURL","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50d3e30e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3pG4i\",\"Modal\":\"Modal_Modal__n3X6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem__container\":\"ImageGalleryItem_ImageGalleryItem__container__13NXn\",\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3tVLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"More__button\":\"Button_More__button__ucsmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__36HYM\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.css';\n\nfunction Searchbar({ onQuerySubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [btnDisabled, setBtnDisabled] = useState(true);\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n    setBtnDisabled(false);\n  };\n\n  const handleSubmit = e => {\n    //console.log('submit btn pressed');\n    e.preventDefault();\n    const normalizedSearchQuery = searchQuery.trim();\n\n    if (normalizedSearchQuery.length !== 0) {\n      onQuerySubmit(searchQuery.trim());\n    }\n\n    setBtnDisabled(true);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        {btnDisabled ? (\n          <button\n            type=\"submit\"\n            disabled\n            className={styles.SearchForm__button_disabled}\n          >\n            <span>Search</span>\n          </button>\n        ) : (\n          <button type=\"submit\" className={styles.SearchForm__button}>\n            <span>Search</span>\n          </button>\n        )}\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onQuerySubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nfunction Button({ onGetMore }) {\n  return (\n    <button type=\"button\" className={styles.More__button} onClick={onGetMore}>\n      Load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onGetMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n\n/*\nclass Button extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        className={styles.More__button}\n        onClick={this.props.onGetMore}\n      >\n        Load more\n      </button>\n    );\n  }\n}\nButton.propTypes = {\n  onGetMore: PropTypes.func.isRequired,\n};\n*/\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, src, alt }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackDropClick = e => {\n    // console.log(\n    //   'e.currentTarget: ',\n    //   e.currentTarget,\n    //   '   e.target: ',\n    //   e.target,\n    // );\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleBackDropClick}>\n      <div className={styles.Modal}>\n        <img src={src} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\n/*\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackDropClick = e => {\n    // console.log(\n    //   'e.currentTarget: ',\n    //   e.currentTarget,\n    //   '   e.target: ',\n    //   e.target,\n    // );\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    //console.log('Styles in modal', styles.Overlay);\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackDropClick}>\n        <div className={styles.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n*/\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\n\nclass ImageGallery extends Component {\n  componentDidUpdate() {\n    //console.log('gallerey was Updated:', document.documentElement.scrollHeight);\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    return <ul className={styles.ImageGallery}>{this.props.children}</ul>;\n  }\n}\n\nImageGallery.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ id, alt, src, url, onClick }) => (\n  <li className={styles.ImageGalleryItem__container}>\n    <img\n      src={src}\n      alt={alt}\n      url={url}\n      onClick={onClick}\n      className={styles.ImageGalleryItem}\n    />\n  </li>\n);\nImageGalleryItem.propTypes = {\n  alt: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","//import axios from 'axios';\n\n//axios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = 'key=21933433-c49aed7af732e0bc1136ba9bb';\nconst IMG_TYPE = 'image_type=photo&orientation=horizontal';\n\nfunction fetchImages(searchQuery = '', currentPage = 1) {\n  //   console.log(\n  //     'Inside API file: searchQuery',\n  //     searchQuery,\n  //     'currentPage',\n  //     currentPage,\n  //   );\n  return fetch(\n    `${BASE_URL}?q=${searchQuery}&page=${currentPage}&${KEY}&${IMG_TYPE}&per_page=12`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Bad request!!! No response from server`));\n  });\n}\n\nconst api = { fetchImages };\nexport default api;\n\n// axios.get('/user?ID=12345')\n//   .then(function (response) {\n//     // handle success\n//     console.log(response);\n//   })\n//   .catch(function (error) {\n//     // handle error\n//     console.log(error);\n//   })\n//   .then(function () {\n//     // always executed\n//   });\n","import { useState, useEffect } from 'react';\n//import Section from './components/Section/Section';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport pixabayAPI from './components/pixabayAPI';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [urlModal, setUrlModal] = useState('');\n  const [altModal, setAltModal] = useState('');\n  //const [largeImageURL, setLargeImageURL] = useState('');\n  const [imgOnCurrentPage, setImgOnCurrentPage] = useState([]);\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    fetchImgs();\n  }, [searchQuery]);\n\n  const fetchImgs = () => {\n    setIsLoading(true);\n\n    pixabayAPI\n      .fetchImages(searchQuery, currentPage)\n      .then(data => {\n        //console.log('images data', data);\n        const images = data.hits;\n        setImgOnCurrentPage([...images]);\n        setImages(prevImages => [...prevImages, ...images]);\n        setCurrentPage(prevCurPage => prevCurPage + 1);\n\n        if (images.length < 1) {\n          setError('No more images. Try another querry!!!');\n        }\n      })\n      .catch(e => setError(prevError => `${prevError} : ${e.message}`))\n      .finally(() => setIsLoading(false));\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  const handleQuerySubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setImages([]);\n    setCurrentPage(1);\n    setError(null);\n  };\n\n  const handleImageClick = e => {\n    toggleModal();\n    setUrlModal(e.currentTarget.getAttribute('url'));\n    setAltModal(e.currentTarget.getAttribute('alt'));\n  };\n\n  //https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\n  //id - уникальный идентификатор\n  //webformatURL - ссылка на маленькое изображение для списка карточек\n  //largeImageURL - ссылка на большое изображение для модального окна\n\n  const shouldRenderBtn = !isLoading && !(imgOnCurrentPage.length < 12);\n\n  return (\n    <div className=\"App\">\n      <Searchbar onQuerySubmit={handleQuerySubmit} />\n      {error && (\n        <p\n          style={{\n            color: 'red',\n            border: '1px solid red',\n            borderRadius: '3px',\n            fontSize: '16px',\n          }}\n        >\n          Error!!! : {error}\n        </p>\n      )}\n\n      <ImageGallery>\n        {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            alt={tags}\n            src={webformatURL}\n            url={largeImageURL}\n            onClick={handleImageClick}\n          />\n        ))}\n      </ImageGallery>\n\n      {isLoading && (\n        <Loader type=\"Bars\" color=\"#237bb6\" height={40} width={60} />\n      )}\n\n      {shouldRenderBtn && <Button onGetMore={fetchImgs} />}\n\n      {showModal && (\n        <Modal onClose={toggleModal} src={urlModal} alt={altModal} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    currentPage: 1,\n    showModal: false,\n    urlModal: '',\n    altModal: '',\n    imgOnCurrentPage: [],\n    images: [],\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.searchQuery !== prevState.searchQuery) {\n      this.fetchImgs();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleQuerySubmit = searchQuery => {\n    this.setState({\n      searchQuery,\n      images: [],\n      currentPage: 1,\n      error: null,\n    });\n  };\n\n  handleImageClick = e => {\n    this.toggleModal();\n    this.setState({\n      urlModal: e.currentTarget.getAttribute('url'),\n      altModal: e.currentTarget.getAttribute('alt'),\n    });\n  };\n\n  fetchImgs = () => {\n    // this.setState({ isLoading: true },);\n\n    pixabayAPI\n      .fetchImages(this.state.searchQuery, this.state.currentPage)\n      .then(data => {\n        //console.log('images data', data);\n        const images = data.hits;\n        this.setState(prevState => ({\n          imgOnCurrentPage: [...images],\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        if (images.length < 1) {\n          this.setState({\n            error: 'No more images. Try another querry!!!',\n          });\n        }\n      })\n      .catch(e => this.setState({ error: e.message }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  //https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\n  //id - уникальный идентификатор\n  //webformatURL - ссылка на маленькое изображение для списка карточек\n  //largeImageURL - ссылка на большое изображение для модального окна\n\n  render() {\n    const { error, showModal, altModal, urlModal } = this.state;\n    const { images, imgOnCurrentPage, isLoading } = this.state;\n    const shouldRenderBtn = !isLoading && !(imgOnCurrentPage.length < 12);\n    return (\n      <div className=\"App\">\n        <Searchbar onQuerySubmit={this.handleQuerySubmit} />\n        {error && (\n          <p\n            style={{\n              color: 'red',\n              border: '1px solid red',\n              borderRadius: '3px',\n              fontSize: '16px',\n            }}\n          >\n            Error!!! : {error}\n          </p>\n        )}\n\n        <ImageGallery>\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem\n              key={id}\n              alt={tags}\n              src={webformatURL}\n              url={largeImageURL}\n              onClick={this.handleImageClick}\n            />\n          ))}\n        </ImageGallery>\n\n        {isLoading && (\n          <Loader type=\"Bars\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n\n        {shouldRenderBtn && <Button onGetMore={this.fetchImgs} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={urlModal} alt={altModal} />\n        )}\n      </div>\n    );\n  }\n}*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1BYme\",\"SearchForm__button\":\"Searchbar_SearchForm__button__29GY2\",\"SearchForm__button_disabled\":\"Searchbar_SearchForm__button_disabled__3orbs\"};"],"sourceRoot":""}